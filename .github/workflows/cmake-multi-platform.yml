# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false # run all matrix combinations even if some fail
      matrix:
        include:
          # - os: windows-latest
          #   c_compiler: cl
          #   cpp_compiler: cl
          #   build_type: MinSizeRel
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: MinSizeRel
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            build_type: MinSizeRel

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{ steps.strings.outputs.build-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -S ${{ github.workspace }}

    - name: Build
      # --config is needed for windows
      run: cmake --build ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }}
